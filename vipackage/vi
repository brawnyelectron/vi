#!/usr/bin/env node

var path     = require('path');
var fs       = require('fs.extra');
var color    = require('colors');
var request  = require('request');
var utils    = require('./utils.js');
var pack     = require('./package.json');
var uploader = require('file-uploader');

var args = process.argv.slice(2);
var demo = true;
var config = utils.getConfig();

// Copy template to current directory
if (args[0] === 'init') {
  fs.copy(utils.lodir('logo.png'), 'logo.png', function(err) {
    if (err) console.log('Error: It looks like this directory has already been initialized.'.red);
    else {
      fs.copy(utils.lodir('template.js'), 'extension.js', function(err) {
        if (err) console.log('Error: It looks like this directory has already been initialized.'.red);
        else {
          console.log(('Initialized empty Vi extension in ' + process.cwd()).green);
        }
      });
    }
  });
} else if (args[0] === 'publish') {
  var name;
  if (args[1] !== undefined) {
    name = args[1];
  } else {
    name = path.basename(process.cwd());
  }
  console.log("Publishing " + name.yellow + "...");
  utils.zip('.', name, function() {

    var host;
    if (!demo) {
      host = "http://viapi.io";
    } else {
      host = "http://localhost:3000";
    }

    fs.createReadStream(utils.lodir(name + '.zip')).pipe(request.post(host + "/extension", function(err, response) {
      if (response === undefined || response.statusCode !== 200) {
        console.log(("Unable to publish" + name + "! A server error occured.").red);
      } else {
        console.log((name + " was published successfully!").green);
      }
    }));
  });

} else if (args[0] === 'login') {
  console.log(config);
} else {
  console.log('Error: unknown command'.red);
}
